WHITESPACE   =  _{ " " | "\t" | NEWLINE }

name = @{ ASCII_ALPHA ~ (ASCII_ALPHA | ASCII_DIGIT | "_")* }
file  =   { SOI ~ (add_function | add_var | expr) ~ EOI }
    expr     =   { prefix? ~ primary ~ (infix ~ prefix? ~ primary )* }
        infix    =  { pow | add | sub | mul | div  }
            add    =   _{ "+" } // Addition
            sub    =   _{ "-" } // Subtraction
            mul    =   _{ "*" } // Multiplication
            div    =   _{ "/" } // Division
            pow    =   _{ "^" | "**"} // Exponentiation
        prefix   =  { neg }
            neg    =   _{ "-" } // Negation
        primary  =  _{ ternary | number | func | "(" ~ expr ~ ")" | var }
            var     =  @{ name }
            func    =  {name ~ "(" ~ args ~ ")"}
                args    =  { expr ~ ("," ~ expr)* }
            number  =  ${ int ~ ( "." ~ fract ~ exp? )? ~ unit? }
                int    =  @{ (ASCII_NONZERO_DIGIT ~ ("_"? ~ ASCII_DIGIT)+) | ASCII_DIGIT }
                fract  =  @{ ASCII_DIGIT ~ ("_"? ~ ASCII_DIGIT)* }
                exp    =  @{ ("e" | "E") ~ ("+" | "-")? ~ int }
                unit   =  @{ (ASCII_ALPHA)+ }
        ternary  =  { "(" ~ expr ~ cond ~ expr ~ "?" ~ expr ~ ":" ~ expr ~ ")" }
            cond = _{ notEqual | greaterEqual | lessEqual | greater | less | equal }
                greater = { ">" }
                less = { "<" }
                equal = { "==" }
                greaterEqual = { ">=" }
                lessEqual = { "<=" }
                notEqual = { "!=" }
    add_function = { name ~ "(" ~ arg_names ~ ")" ~ "=" ~ expr }
        arg_names = _{ (name ~ ("," ~ name)*) | "" }
    add_var = { name ~ "=" ~ expr }
